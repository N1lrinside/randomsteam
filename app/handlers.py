import re
from aiogram import types, Router, F
from aiogram.filters import CommandStart
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, Message
from aiogram.utils.markdown import hbold
from app.GameSteam import GameSteam
from app.others import mydb, random
import mysql.connector

button_hello = InlineKeyboardButton(text="–ü–æ–¥–æ–±—Ä–∞—Ç—å –∏–≥—Ä—É", callback_data="randomgame")

row = [button_hello]

inline_keyboard = InlineKeyboardMarkup(inline_keyboard=[row])

router = Router()


@router.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {hbold(message.from_user.full_name)}!\n"
                         "üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞  '–†–∞–Ω–¥–æ–º–Ω–∞—è –∏–≥—Ä–∞ –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Steam!' üéÆ\n"
                         "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –≤—ã–±—Ä–∞—Ç—å, –≤ –∫–∞–∫—É—é –∏–≥—Ä—É –ø–æ–∏–≥—Ä–∞—Ç—å –∏–∑ –≤–∞—à–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –≤ Steam.\n"
                         "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /randomgame, "
                         "–∏ –±–æ—Ç —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –≤—ã–±–µ—Ä–µ—Ç –∏–≥—Ä—É –∏–∑ –≤–∞—à–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏.\n"
                         "–ù–æ –ø–µ—Ä–µ–¥ —ç—Ç–∏–º –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –≤ —Å—Ç–∏–º–µ!", reply_markup=inline_keyboard)


@router.callback_query(F.data == 'randomgame')
async def randomgame(callback: types.CallbackQuery) -> None:
    kb = [
        [
            types.KeyboardButton(text="–°–ø–∞—Å–∏–±–æ!")
        ],
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True
    )

    try:
        await callback.message.answer("–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É —Å—Ç–∏–º –∏ –ø–æ–¥–±–∏—Ä–∞—é –∏–≥—Ä—É")
        cursor = mydb.cursor()
        cursor.execute(f"SELECT steam_id FROM Steams_id WHERE id = {callback.from_user.id}")
        id_steam = cursor.fetchall()
        await callback.message.answer(f'{random(id_steam[0][0])}', reply_markup=keyboard)
    except NameError:
        await callback.message.answer('–í—ã –µ—â–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç–∏–º –ø—Ä–æ—Ñ–∏–ª—å')


@router.message(F.text.lower() == "—Å–ø–∞—Å–∏–±–æ!")
async def answer(message: types.Message) -> None:
    await message.reply('–ù–µ –∑–∞ —á—Ç–æ! –û–±—Ä–∞—â–∞–π—Ç–µ—Å—å –µ—â—ë', reply_markup=inline_keyboard)


@router.message()
async def echo_handler(message: types.Message) -> None:
    try:
        if re.search(r'/id/', message.text) or re.search(r'/profiles/\d+', message.text):
            cursor = mydb.cursor()
            sql = "INSERT INTO Steams_id (id, steam_id) VALUES (%s, %s)"
            if re.search(r'/id/\w+', message.text) is None:
                user = GameSteam(re.search(r'/profiles/\d+', message.text).group()[10:])
                val = (message.from_user.id, user.user_id)
            else:
                user = GameSteam(re.search(r'/id/\w+', message.text).group()[4:])
                val = (message.from_user.id, user.user_id)
            try:
                cursor.execute(sql, val)
            except mysql.connector.errors.IntegrityError:
                sql = "UPDATE Steams_id SET steam_id = %s WHERE id = %s"
                val = (user.user_id, message.from_user.id)
                cursor.execute(sql, val)
            mydb.commit()
            await message.answer('ID —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω')
        else:
            await message.reply('–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞')
    except TypeError as err:
        print(err)
        await message.answer("Nice try!")
